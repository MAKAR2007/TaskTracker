generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  description String?
  tasks       Task[]
  manager     User?    @relation(fields: [managerId], references: [id])
  managerId   String?  @db.ObjectId
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")

  @@map("projects")
}

model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  description String?
  comments    Comment[]
  files       File[]
  endDate     String?
  stage       Stage     @default(New)
  priority    Priority  @default(Undefined)
  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   String?   @db.ObjectId
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?   @db.ObjectId
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")

  @@map("tasks")
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  comment   String?
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?  @db.ObjectId
  user      String?
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map("comments")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  password      String?
  email         String    @unique
  emailVerified DateTime?
  department    String?
  image         String?
  role          Role      @default(user)
  managedprjs   Project[]
  tasks         Task[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  @@map("users")
}

model File {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  buffer Bytes
  name   String?
  task   Task?   @relation(fields: [taskId], references: [id])
  taskId String  @db.ObjectId

  @@map("files")
}

enum Role {
  user
  manager
  administrator
}

enum Priority {
  Undefined
  Low
  Medium
  High
}

enum Stage {
  New
  WIP
  Review
  Done
}
